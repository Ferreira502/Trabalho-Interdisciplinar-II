function goBack() {
    window.history.back();
}

function sendNotification() {
    document.getElementById('popupOverlay').style.display = 'block';
    document.getElementById('notificationPopup').style.display = 'block';
}

function closePopup() {
    document.getElementById('popupOverlay').style.display = 'none';
    document.getElementById('notificationPopup').style.display = 'none';
}

function confirmSendNotification() {
    const message = document.getElementById('notificationMessage').value;
    if (message.trim()) {
        alert('‚úÖ Notifica√ß√£o enviada com sucesso para Maria Silva!\n\nMensagem: ' + message);
        closePopup();
        document.getElementById('notificationMessage').value = '';
    } else {
        alert('‚ö†Ô∏è Por favor, digite uma mensagem.');
    }
}

function callEmergency() {
    if (confirm('üö® Deseja acionar o SAMU para Maria Silva?\n\nLocaliza√ß√£o: Rua das Flores, 123 - Centro\nStatus: Cr√≠tico - 125 BPM')) {
        alert('üö® SAMU acionado com sucesso!\n\nProtocolo: #EMG001\nTempo estimado: 8-12 minutos\n\nEquipe m√©dica a caminho da localiza√ß√£o.');
    }
}

function addNote() {
    const note = prompt('üìù Adicionar nota sobre Maria Silva:');
    if (note) {
        alert('‚úÖ Nota adicionada ao prontu√°rio de Maria Silva.');
    }
}

function scheduleVisit() {
    alert('üóìÔ∏è Abrindo agenda para agendar consulta com Maria Silva...');
}

function prescribeMed() {
    alert('üíä Abrindo sistema de prescri√ß√£o para Maria Silva...');
}

function shareData() {
    alert('üìä Preparando relat√≥rio de Maria Silva para compartilhamento...');
}

// Simular atualiza√ß√£o de dados em tempo real
function updateVitalSigns() {
    const bpmElement = document.querySelector('.vital-value.critical');
    const currentBpm = parseInt(bpmElement.textContent);

    // Simular varia√ß√£o de ¬±5 BPM
    const variation = Math.floor(Math.random() * 11) - 5;
    const newBpm = Math.max(60, Math.min(160, currentBpm + variation));

    bpmElement.textContent = newBpm;

    // Atualizar status baseado no novo valor
    if (newBpm > 120) {
        bpmElement.className = 'vital-value critical';
    } else if (newBpm > 100) {
        bpmElement.className = 'vital-value warning';
    } else {
        bpmElement.className = 'vital-value normal';
    }

    // Atualizar timestamp da √∫ltima medi√ß√£o
    const timeElement = document.querySelector('.vital-item .vital-label');
    if (timeElement && timeElement.textContent === '√öltima Medi√ß√£o') {
        timeElement.previousElementSibling.textContent = Math.floor(Math.random() * 60) + 's';
    }
}

// Fun√ß√£o para adicionar novos alertas
function addNewAlert(type, message) {
    const alertsList = document.querySelector('.alerts-list');
    const newAlert = document.createElement('div');
    newAlert.className = `alert-item ${type}`;

    const now = new Date();
    const timeText = `h√° ${Math.floor(Math.random() * 5) + 1} minutos`;

    newAlert.innerHTML = `
                <div class="alert-time">${timeText}</div>
                <div class="alert-message">${message}</div>
            `;

    // Inserir no topo da lista
    alertsList.insertBefore(newAlert, alertsList.firstChild);

    // Manter apenas os √∫ltimos 10 alertas
    while (alertsList.children.length > 10) {
        alertsList.removeChild(alertsList.lastChild);
    }
}

// Fun√ß√£o para simular novos alertas aleat√≥rios
function simulateAlerts() {
    const alertTypes = [
        { type: 'warning', message: 'Pequena varia√ß√£o na frequ√™ncia card√≠aca detectada' },
        { type: 'critical', message: 'Frequ√™ncia card√≠aca acima do limite cr√≠tico' },
        { type: 'warning', message: 'Dispositivo com bateria baixa - 15%' },
        { type: 'critical', message: 'Paciente saiu da zona de seguran√ßa' }
    ];

    const randomAlert = alertTypes[Math.floor(Math.random() * alertTypes.length)];
    addNewAlert(randomAlert.type, randomAlert.message);
}

// Fun√ß√£o para enviar mensagem WhatsApp personalizada
function sendWhatsAppMessage(type) {
    const messages = {
        checkup: "Ol√° Maria! Sou o Dr. Jo√£o Santos. Como voc√™ est√° se sentindo? Notei alguns valores elevados no seu monitoramento.",
        medication: "Oi Maria! N√£o esque√ßa de tomar sua medica√ß√£o no hor√°rio correto. Qualquer d√∫vida, me chame!",
        appointment: "Ol√°! Gostaria de agendar uma consulta para avaliarmos seus sinais vitais. Voc√™ tem disponibilidade esta semana?",
        emergency: "Maria, detectei valores preocupantes no seu monitor. Voc√™ est√° se sentindo bem? Precisa de ajuda?"
    };

    const selectedMessage = messages[type] || messages.checkup;
    const whatsappUrl = `https://wa.me/5511999999999?text=${encodeURIComponent(selectedMessage)}`;
    window.open(whatsappUrl, '_blank');
}

// Adicionar op√ß√µes de mensagem WhatsApp
function showWhatsAppOptions() {
    const options = [
        { key: 'checkup', text: 'üîç Check-up Geral' },
        { key: 'medication', text: 'üíä Lembrete Medica√ß√£o' },
        { key: 'appointment', text: 'üìÖ Agendar Consulta' },
        { key: 'emergency', text: 'üö® Situa√ß√£o de Emerg√™ncia' }
    ];

    let message = "Escolha o tipo de mensagem:\n\n";
    options.forEach((option, index) => {
        message += `${index + 1}. ${option.text}\n`;
    });

    const choice = prompt(message + "\nDigite o n√∫mero da op√ß√£o (1-4):");
    const optionIndex = parseInt(choice) - 1;

    if (optionIndex >= 0 && optionIndex < options.length) {
        sendWhatsAppMessage(options[optionIndex].key);
    }
}

// Fun√ß√£o para exportar dados do paciente
function exportPatientData() {
    const patientData = {
        name: "Maria Silva",
        id: "#FV001",
        currentBPM: document.querySelector('.vital-value.critical').textContent,
        status: "CR√çTICO",
        location: "Rua das Flores, 123 - Centro",
        lastUpdate: new Date().toLocaleString('pt-BR'),
        alerts: Array.from(document.querySelectorAll('.alert-message')).map(alert => alert.textContent),
        vitals: {
            heartRate: "125 BPM",
            trend: "Crescente",
            riskLevel: "Alto",
            lastMeasurement: "30 segundos atr√°s"
        }
    };

    const dataStr = JSON.stringify(patientData, null, 2);
    const dataUri = 'data:application/json;charset=utf-8,' + encodeURIComponent(dataStr);

    const exportFileDefaultName = `maria_silva_${new Date().toISOString().split('T')[0]}.json`;

    const linkElement = document.createElement('a');
    linkElement.setAttribute('href', dataUri);
    linkElement.setAttribute('download', exportFileDefaultName);
    linkElement.click();
}

// Fun√ß√£o para imprimir relat√≥rio
function printReport() {
    const printWindow = window.open('', '', 'height=600,width=800');
    printWindow.document.write(`
                <html>
                <head>
                    <title>Relat√≥rio - Maria Silva</title>
                    <style>
                        body { font-family: Arial, sans-serif; margin: 20px; }
                        .header { text-align: center; border-bottom: 2px solid #667eea; padding-bottom: 10px; margin-bottom: 20px; }
                        .section { margin-bottom: 20px; }
                        .critical { color: #dc2626; font-weight: bold; }
                        .warning { color: #f59e0b; font-weight: bold; }
                        .normal { color: #059669; font-weight: bold; }
                    </style>
                </head>
                <body>
                    <div class="header">
                        <h1>Relat√≥rio M√©dico - Fio Vital Pro</h1>
                        <h2>Paciente: Maria Silva (ID: #FV001)</h2>
                        <p>Data/Hora: ${new Date().toLocaleString('pt-BR')}</p>
                        <p>Dr. Jo√£o Santos - Cardiologista</p>
                    </div>
                    
                    <div class="section">
                        <h3>Status Atual</h3>
                        <p><strong>Condi√ß√£o:</strong> <span class="critical">CR√çTICA</span></p>
                        <p><strong>Frequ√™ncia Card√≠aca:</strong> <span class="critical">125 BPM</span></p>
                        <p><strong>Tend√™ncia:</strong> <span class="warning">Crescente</span></p>
                        <p><strong>Localiza√ß√£o:</strong> Rua das Flores, 123 - Centro</p>
                    </div>
                    
                    <div class="section">
                        <h3>Dados do Paciente</h3>
                        <p><strong>Idade:</strong> 68 anos</p>
                        <p><strong>Sexo:</strong> Feminino</p>
                        <p><strong>Tipo Sangu√≠neo:</strong> O+</p>
                        <p><strong>Contato:</strong> (11) 99999-9999</p>
                        <p><strong>Emerg√™ncia:</strong> Jo√£o Silva (Filho)</p>
                    </div>
                    
                    <div class="section">
                        <h3>Recomenda√ß√µes</h3>
                        <ul>
                            <li>Monitoramento cont√≠nuo necess√°rio</li>
                            <li>Considerar consulta presencial urgente</li>
                            <li>Verificar ader√™ncia √† medica√ß√£o</li>
                            <li>Orientar repouso e evitar esfor√ßos</li>
                        </ul>
                    </div>
                    
                    <div class="section">
                        <p><em>Este relat√≥rio foi gerado automaticamente pelo sistema Fio Vital Pro.</em></p>
                    </div>
                </body>
                </html>
            `);
    printWindow.document.close();
    printWindow.print();
}

// Substituir a fun√ß√£o shareData existente
function shareData() {
    const options = [
        '1. üìß Enviar por Email',
        '2. üíæ Exportar JSON',
        '3. üñ®Ô∏è Imprimir Relat√≥rio',
        '4. üì± Compartilhar via WhatsApp'
    ];

    const choice = prompt('Como deseja compartilhar os dados?\n\n' + options.join('\n') + '\n\nDigite o n√∫mero da op√ß√£o:');

    switch (choice) {
        case '1':
            window.location.href = 'mailto:?subject=Relat√≥rio - Maria Silva&body=Segue em anexo o relat√≥rio da paciente Maria Silva (ID: #FV001)';
            break;
        case '2':
            exportPatientData();
            break;
        case '3':
            printReport();
            break;
        case '4':
            sendWhatsAppMessage('checkup');
            break;
        default:
            alert('Op√ß√£o inv√°lida.');
    }
}

// Atualizar a fun√ß√£o do WhatsApp para mostrar op√ß√µes
document.addEventListener('DOMContentLoaded', function () {
    const whatsappBtn = document.querySelector('.action-btn.whatsapp');
    if (whatsappBtn) {
        whatsappBtn.onclick = function (e) {
            e.preventDefault();
            showWhatsAppOptions();
        };
    }
});

// Iniciar simula√ß√µes quando a p√°gina carregar
document.addEventListener('DOMContentLoaded', function () {
    // Atualizar sinais vitais a cada 10 segundos
    setInterval(updateVitalSigns, 10000);

    // Simular novos alertas a cada 30 segundos
    setInterval(simulateAlerts, 30000);

    // Mostrar notifica√ß√£o de boas-vindas
    setTimeout(() => {
        if (Notification.permission === 'granted') {
            new Notification('Fio Vital Pro', {
                body: 'Monitorando Maria Silva - Status cr√≠tico detectado',
                icon: 'üíó'
            });
        } else if (Notification.permission !== 'denied') {
            Notification.requestPermission().then(permission => {
                if (permission === 'granted') {
                    new Notification('Fio Vital Pro', {
                        body: 'Notifica√ß√µes ativadas para Maria Silva',
                        icon: 'üíó'
                    });
                }
            });
        }
    }, 2000);
});

// Fun√ß√£o para alternar entre temas (modo escuro)
function toggleDarkMode() {
    document.body.classList.toggle('dark-mode');
    localStorage.setItem('darkMode', document.body.classList.contains('dark-mode'));
}

// Verificar prefer√™ncia de tema salva
if (localStorage.getItem('darkMode') === 'true') {
    document.body.classList.add('dark-mode');
}

// Adicionar atalhos de teclado
document.addEventListener('keydown', function (e) {
    if (e.ctrlKey || e.metaKey) {
        switch (e.key) {
            case '1':
                e.preventDefault();
                sendNotification();
                break;
            case '2':
                e.preventDefault();
                document.querySelector('.action-btn.call').click();
                break;
            case '3':
                e.preventDefault();
                showWhatsAppOptions();
                break;
            case '4':
                e.preventDefault();
                callEmergency();
                break;
            case 'p':
                e.preventDefault();
                printReport();
                break;
        }
    }
});